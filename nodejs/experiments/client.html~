<html>
	
	<head>
		<meta charset="UTF-8">
		
		<style type="text/css">
		 #text {
         position: absolute;		 
		 }
		</style>
	   <script src="/socket.io/socket.io.js"></script>
      <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.js"></script>
		<script>
			var socket = io.connect();
         
         function sort(){
            var check = document.getElementById("sortType").checked;
            if(check)
               clientSort();
            else {
               //var start = new Date().getTime();			              	
            	serverSort();            	
			      //var end = new Date().getTime();
               //document.getElementById("timeServer").innerHTML = (end-start)/1000 + " seconds";
            }         
         }   
         function serverSort(){
                            			
            socket.emit('noOfElements', {'number' : document.getElementById("size").value});
			   socket.on('result', function(data){
			      //document.getElementById("result").value = data.res.res;
			      document.getElementById("time").innerHTML = data.res.time;
			   });           
         }			
         
         
			function clientSort(){
			   var noOfElements = document.getElementById("size").value;
			   var items = [];
            var number = 0;			   
			   for(var i=0; i<noOfElements; i++){
			      number = Math.floor(Math.random() * (noOfElements - 1)) + 1;
			      items.push(number);
			   }
			   var to = [];
			   var start = new Date().getTime();
			   to = mergeSort(items);
			   var end = new Date().getTime();
            //document.getElementById("result").value = to;
            document.getElementById("time").innerHTML = (end-start)/1000 + " seconds";		      
		      	   
			};
			
			function mergeSort(items) {
			   if(items.length < 2)
			      return items;
			      
			   var middle = Math.floor(items.length/2),
			       left = items.slice(0, middle),
			       right = items.slice(middle);
			   
			   return merge(mergeSort(left), mergeSort(right));
			   
			};
         
         function merge(left, right){
            var result = [],
                leftIndex = 0,
                rightIndex = 0;
            
            while(leftIndex < left.length && rightIndex < right.length){
               if(left[leftIndex] < right[rightIndex])
                  result.push(left[leftIndex++]);
               else {
               	result.push(right[rightIndex++]);
               }
            }
            return result.concat(left.slice(leftIndex)).concat(right.slice(rightIndex));                  
         };         
            		
			function showCoords(event){    
            var _position = {
               _x : event.clientX,
               _y : event.clientY        
            };
            document.getElementById("mx").innerHTML = _position._x;
            document.getElementById("my").innerHTML = _position._y;
            //socket.emit('position', {'pos': _position}); 
			 };
			 
			 //socket.on('server_pos', function(data){
            //var _x = data._position._x;
            //var _y = data._position._y;
            //var val = "Server X " + _x + ", Server Y " + _y;
            //document.getElementById("text").innerHTML = val;
            
			 //});
		</script>
		<title> Client page</title>
	</head>
	
	<body>
	
	   <div>
         Enter number of elements: <input type="text" name="elements" id="size"/> 
         <br/><br/>
         Sort client side: <input type="checkbox" id="sortType" name="sortType" checked="checked"/><br/>
         <input type="button" name="submit" value="submit" onclick="sort()"/>
         <br/><br/>   
	   </div>  		
		<div>  		    
		    Result: <br/> 
          <textarea rows="10" cols="80" id="result"></textarea>
          <br/><br/>
          Time Taken (Client): <br/>
          <p id="time"></p>
          <br/><br/>
          Time Taken (Server): <br/>
          <p id="timeServer"></p>		       
		       
		</div>
		
	</body>
</html>